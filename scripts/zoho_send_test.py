"""Utility to send a test email via ZohoMailAdapter using current .env settings."""
import asyncio
import os
from dotenv import load_dotenv

load_dotenv(override=True)

import sys
from pathlib import Path as _Path
ROOT = _Path(__file__).resolve().parent.parent
if str(ROOT) not in sys.path:
    sys.path.insert(0, str(ROOT))
from app.assistants.main import ZohoOAuthClient, ZohoMailAdapter  # noqa: E402


async def main() -> None:
    http_timeout = float(os.getenv("ZOHO_TEST_TIMEOUT", "20"))
    import httpx

    async with httpx.AsyncClient(timeout=httpx.Timeout(http_timeout, connect=5.0)) as http:
        oauth = ZohoOAuthClient(http)
        adapter = ZohoMailAdapter(http, oauth)
        token = await oauth.access_token()
        print("Using access token:", token)
        if not adapter.configured():
            raise SystemExit("Zoho adapter not fully configured. Check env vars.")

        to_address = os.getenv("ZOHO_TEST_TO", os.getenv("ZOHO_DEFAULT_FROM"))
        if not to_address:
            raise SystemExit("Set ZOHO_TEST_TO or ZOHO_DEFAULT_FROM for the test recipient.")

        subject = os.getenv("ZOHO_TEST_SUBJECT", "Hot Rod AN Zoho test message")
        body = os.getenv(
            "ZOHO_TEST_BODY",
            "This is a test email generated by scripts/zoho_send_test.py",
        )
        cc = [s.strip() for s in os.getenv("ZOHO_TEST_CC", "").split(",") if s.strip()]
        result = await adapter.send_email(
            to_address=to_address,
            subject=subject,
            body=body,
            ccaddresses=cc,
            conversation_id=os.getenv("ZOHO_TEST_CONVERSATION_ID"),
        )
        print("Delivery status:", result.status)
        print("Metadata:", result.metadata)
        if result.error:
            print("Error:", result.error)


if __name__ == "__main__":
    asyncio.run(main())
